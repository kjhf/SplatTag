<Window x:Class="SplatTagUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SplatTagUI"
        mc:Ignorable="d"
        Title="Slapp" Height="480" Width="1080"
        Background="Black"
        Foreground="White"
        x:Name="_this">
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="boolToVis" />
    <local:GetTeamPlayersConverter x:Key="getTeamPlayers" />
    <local:PlayerOldTeamsToStringConverter x:Key="playerOldTeamsToStringConverter" />
    <local:GetTeamBestPlayerDivConverter x:Key="getTeamBestPlayerDivConverter" />
    <local:SourcesToStringConverter x:Key="sourcesToStringConverter" />
    <local:Top500ToString x:Key="top500ToString" />
    <local:TeamIdToString x:Key="teamIdToString" />
    <local:JoinStringsConverter x:Key="joinStringsConverter" />
    <local:ValidStringToVisibleConverter x:Key="validStringToVisibleConverter" />
    <local:ContextMenuConverter x:Key="contextMenuConverter" />

    <Style x:Key="hintTextBlockStyle" TargetType="TextBlock">
      <Setter Property="Background" Value="Honeydew" />
      <Setter Property="Foreground" Value="LightSteelBlue" />
    </Style>
    <Style x:Key="detailsTextBlockStyle" TargetType="TextBlock">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="LightSteelBlue" />
    </Style>
    <Style x:Key="invertTextBlockStyle" TargetType="TextBlock">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="checkBoxStyle" TargetType="CheckBox">
      <Setter Property="Background" Value="Black" />
      <Setter Property="Foreground" Value="LightSteelBlue" />
    </Style>
    <Style x:Key="listBoxStyle" TargetType="ListBox">
      <Setter Property="Background" Value="Black" />
      <Setter Property="Foreground" Value="LightSteelBlue" />
    </Style>
    <Style x:Key="stackPanelStyle" TargetType="StackPanel">
      <Setter Property="Background" Value="Transparent" />
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="50" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid Grid.Row="0" Background="White">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid x:Name="searchGrid"  Grid.Column="0" ToolTip="Search for a team or player by typing here given the options on the right.">
        <TextBox x:Name="searchInput" MinWidth="50" Background="Transparent" TextChanged="SearchInput_TextChanged" />
        <!-- Hint Text -->
        <TextBlock Style="{StaticResource hintTextBlockStyle}" Margin="5,2" MinWidth="50"
                   Text="Search for a name, tag, friend code, Discord, Twitter, Twitch, or Battlefy detail" IsHitTestVisible="False"
                   Visibility="{Binding ElementName=searchInput, Path=Text.IsEmpty, Converter={StaticResource boolToVis}}" />
      </Grid>
      <Grid x:Name="searchFunctionsGrid"  Grid.Column="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel Style="{StaticResource stackPanelStyle}" Grid.Column="0">
          <CheckBox x:Name="ignoreCaseCheckbox" Content="Ignore Case?" ToolTip="Search by ignoring case?" IsChecked="True"></CheckBox>
          <CheckBox x:Name="nearMatchCheckbox" Content="Near Matching?" ToolTip="Match symbols and letters that are visually close (e.g. κ matches k)" IsChecked="True"></CheckBox>
          <CheckBox x:Name="regexCheckbox" Content="Regex?" ToolTip="Match using a Regex query? (Advanced!)" IsChecked="False"></CheckBox>
        </StackPanel>
        <StackPanel Style="{StaticResource stackPanelStyle}" Grid.Column="1">
          <CheckBox x:Name="allowEmptySearchCheckbox" Content="Allow empty search?" ToolTip="Allow a search of an empty query? (Will return everything and might lag a little!)" IsChecked="False"></CheckBox>
          <TextBlock x:Name="delayLabel" Text="Smoothing Delay:" Grid.Column="1" FontSize="8" IsEnabled="False" Foreground="Black" Margin="0,5,0,0" Visibility="Collapsed" />
          <Slider x:Name="delaySlider" Grid.Column="1" Value="400" Minimum="1" Maximum="2000" SmallChange="20" LargeChange="100" Visibility="Collapsed" />
          <TextBlock Margin="5,2" Text="{Binding Version, ElementName=_this, FallbackValue=Version 0.0.0, Mode=OneTime}" TextDecorations="Underline" FontStyle="Italic" Foreground="DarkSlateBlue" Background="Transparent" ToolTip="{Binding VersionToolTip, ElementName=_this}" />
        </StackPanel>
      </Grid>
    </Grid>
    <Grid Grid.Row="1" Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="2*" />
        <ColumnDefinition Width="2*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid Background="Transparent" Grid.Column="0">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <StackPanel Style="{StaticResource stackPanelStyle}">
            <TextBlock Margin="5,2" Text="Players List" IsHitTestVisible="False" Style="{StaticResource detailsTextBlockStyle}" />
            <ListBox x:Name="playersListBox" Style="{StaticResource listBoxStyle}">

              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="19*" />
                      <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource detailsTextBlockStyle}">
                      <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1} (Plays for {2})">
                          <Binding Path="Top500" Converter="{StaticResource top500ToString}" />
                          <Binding Path="Name" />
                          <Binding Path="CurrentTeam" Converter="{StaticResource teamIdToString}" />
                        </MultiBinding>
                      </TextBlock.Text>
                      <TextBlock.ContextMenu>
                        <ContextMenu>
                          <ItemsControl ItemsSource="{Binding ., Converter={StaticResource contextMenuConverter}}">
                            <ItemsControl.ItemTemplate>
                              <DataTemplate>
                                <MenuItem Click="MenuItemCopyOnClick">
                                  <MenuItem.Header>
                                    <TextBlock Style="{StaticResource invertTextBlockStyle}">
                                      <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}: {1}">
                                          <Binding Path="Item1" />
                                          <Binding Path="Item2" TargetNullValue="(not set)" />
                                        </MultiBinding>
                                      </TextBlock.Text>
                                    </TextBlock>
                                  </MenuItem.Header>
                                </MenuItem>
                              </DataTemplate>
                            </ItemsControl.ItemTemplate>
                          </ItemsControl>
                        </ContextMenu>
                      </TextBlock.ContextMenu>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal"  Grid.Column="1">
                      <ItemsControl ItemsSource="{Binding Battlefy.Slugs}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Button Width="17" Height="17" HorizontalAlignment="Right" Click="BattlefyButton_Click">
                              <Button.Background>
                                <ImageBrush ImageSource="/SplatTagUI;component/Assets/battlefy.png" />
                              </Button.Background>
                            </Button>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                      <ItemsControl ItemsSource="{Binding Twitter}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Button Width="17" Height="17" HorizontalAlignment="Right" Click="TwitterButton_Click">
                              <Button.Background>
                                <ImageBrush ImageSource="/SplatTagUI;component/Assets/twitter.png" />
                              </Button.Background>
                            </Button>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                      <ItemsControl ItemsSource="{Binding Twitch}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Button Width="17" Height="17" HorizontalAlignment="Right" Click="TwitchButton_Click">
                              <Button.Background>
                                <ImageBrush ImageSource="/SplatTagUI;component/Assets/twitch.png" />
                              </Button.Background>
                            </Button>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                    </StackPanel>
                  </Grid>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListBox>
          </StackPanel>
        </ScrollViewer>
      </Grid>
      <Grid Background="Transparent" Grid.Column="1">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <StackPanel Style="{StaticResource stackPanelStyle}">
            <TextBlock Margin="5,2" Text="Teams List" IsHitTestVisible="False" Style="{StaticResource detailsTextBlockStyle}" />

            <!-- Teams ListBox can be expanded to show all players of the team. -->
            <ListBox x:Name="teamsListBox" Style="{StaticResource listBoxStyle}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Expander IsExpanded="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Background="Transparent">
                    <Expander.Header>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="19*" />
                          <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource detailsTextBlockStyle}">
                          <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1} ({2}). {3}">
                              <Binding Path="Tag" />
                              <Binding Path="Name" />
                              <Binding Path="CurrentDiv" />
                              <Binding Path="." Converter="{StaticResource getTeamBestPlayerDivConverter}" />
                            </MultiBinding>
                          </TextBlock.Text>
                          <TextBlock.ContextMenu>
                            <ContextMenu>
                              <ItemsControl ItemsSource="{Binding ., Converter={StaticResource contextMenuConverter}}">
                                <ItemsControl.ItemTemplate>
                                  <DataTemplate>
                                    <MenuItem Click="MenuItemCopyOnClick">
                                      <MenuItem.Header>
                                        <TextBlock Style="{StaticResource invertTextBlockStyle}">
                                          <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}: {1}">
                                              <Binding Path="Item1" />
                                              <Binding Path="Item2" TargetNullValue="(not set)" />
                                            </MultiBinding>
                                          </TextBlock.Text>
                                        </TextBlock>
                                      </MenuItem.Header>
                                    </MenuItem>
                                  </DataTemplate>
                                </ItemsControl.ItemTemplate>
                              </ItemsControl>
                            </ContextMenu>
                          </TextBlock.ContextMenu>
                        </TextBlock>
                        <Button Grid.Column="1" Width="17" Height="17" HorizontalAlignment="Right" Click="TwitterButton_Click" DataContext="{Binding .}" Visibility="{Binding Path=Twitter, Converter={StaticResource validStringToVisibleConverter}}">
                          <Button.Background>
                            <ImageBrush ImageSource="/SplatTagUI;component/Assets/twitter.png" />
                          </Button.Background>
                        </Button>
                      </Grid>
                    </Expander.Header>
                    <Expander.Content>
                      <StackPanel>
                        <StackPanel.Style>
                          <Style BasedOn="{StaticResource stackPanelStyle}" TargetType="StackPanel">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsExpanded, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsExpanded, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </StackPanel.Style>
                        <ItemsControl ItemsSource="{Binding ., Converter={StaticResource getTeamPlayers}}" Background="Transparent" Foreground="LightSteelBlue" />
                      </StackPanel>
                    </Expander.Content>
                  </Expander>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListBox>
          </StackPanel>
        </ScrollViewer>
      </Grid>
      <Grid Background="Transparent" Grid.Column="2" x:Name="otherFunctionsGrid" Width="150">
        <StackPanel Style="{StaticResource stackPanelStyle}">
          <Button x:Name="dataBaseButton" Content=" Edit Database" FontFamily="Segoe UI Symbol" Height="30" Margin="5" ToolTip="Edit the program's team and player records."  Click="DataBaseButton_Click" />
        </StackPanel>
      </Grid>
    </Grid>
  </Grid>
</Window>